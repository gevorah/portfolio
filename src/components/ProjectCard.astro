---
import { buttonVariants } from "./Button";
import GitHub from '@/icons/GitHub.astro';
import OpenArrow from '@/icons/OpenArrow.astro';

const linkClass = buttonVariants({variant: "outlined", size: "icon"}) 

interface Props {
  image: string
  title: string
  tags: string[]
  description: string
  github?: string
  link?: string
}

const { image, title, tags, description, github, link } = Astro.props
---

<article id="project-card" class="bg-secondary dark:bg-primary rounded-xl shadow-lg hover:scale-105">
  <div class="rounded-t-xl h-72 overflow-hidden">
    <img src={image} alt="" />
  </div>
  <div class="p-4">
    <div class="flex flex-row items-center justify-between">
      <h1 class="text-lg sm:text-2xl font-bold">{title}</h1>
      <div class="inline-flex">
        {github && <a class={linkClass} href={github} target="_blank" rel="noopener noreferrer">
          <GitHub class="w-6 h-6 text-primary dark:text-secondary"/>
        </a>}
        {link && <a class={linkClass} href={link} target="_blank" rel="noopener noreferrer">
          <OpenArrow class="w-6 h-6 text-primary dark:text-secondary" />
        </a>}
      </div>
    </div>
    <div class="flex flex-row flex-wrap gap-2 mt-2">
      {tags.map((tag: string) => 
        <span class="px-2 py-1 rounded-lg text-xs font-bold bg-primary-3 dark:bg-secondary-3 text-secondary-1 dark:text-primary-1">{tag}</span>
      )}
    </div>
    <hr class="border-t border-dim-gray mt-2" />
    <p class="text-sm sm:text-base mt-2">{description}</p>
</article>
